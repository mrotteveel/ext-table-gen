# SPDX-FileCopyrightText: 2023 Mark Rotteveel
# SPDX-License-Identifier: Apache-2.0
name: Publish documentation and artifacts for tags
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]'
      - 'v[0-9]+.[0-9]-*'

permissions:
  contents: read

jobs:
  create-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@56b90f209b02bf6d1deae490e9ef18b21a389cd4
      - name: Assemble with Gradle
        run: ./gradlew assemble
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
          rm -fr ~/.gradle/caches/*/plugin-resolution/
          find ~/.gradle/caches/ -name "*.lock" -type f -delete
      - name: Pages artifact
        uses: actions/upload-artifact@v4
        with:
          name: pages-artifact
          path: build/docs/asciidoc
          compression-level: 9
          retention-days: 1
      - name: Distribution artifact
        uses: actions/upload-artifact@v3
        with:
          name: distribution-artifact
          path: build/distributions
          compression-level: 0
          retention-days: 1
  publish-pages:
    runs-on: ubuntu-latest
    needs: [ create-artifacts ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get pages artifact
        uses: actions/download-artifact@v4
        with:
          name: pages-artifact
          path: pages
      - name: Deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: gh-pages
          folder: pages
  create-release:
    runs-on: ubuntu-latest
    needs: [ create-artifacts ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution-artifact
          path: dist
      - name: Create Release
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5
        with:
          artifacts: dist/*.zip
          artifactContentType: application/x-zip-compressed
          draft: true
          name: "ext-table-gen ${{ github.ref_name }}"
